buildscript {
    ext.kotlin_version = '1.3.10'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group = 'io.api.bloxy'
version = '1.0.0'

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile group: 'org.jetbrains', name: 'annotations', version: '13.0'
    compile group: 'com.beust', name: 'klaxon', version:'3.0.11'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

check.dependsOn jacocoTestReport
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes('Main-Class': 'io.service.money.AppStarter')
    }

    baseName = project.name
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.properties['ossrhUsername'], password: System.properties['ossrhPassword'])
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.properties['ossrhUsername'], password: System.properties['ossrhPassword'])
            }

            pom.project {
                name = 'bloxy-api'
                packaging = 'jar'
                url = 'https://github.com/GoodforGod/bloxy-api'
                description = 'Kotlin & Java Library for all available Bloxy API endpoints'

                scm {
                    connection = 'scm:git:git://github.com/GoodforGod/bloxy-api.git'
                    developerConnection = 'scm:git:ssh://GoodforGod/bloxy-api.git'
                    url = 'https://github.com/GoodforGod/bloxy-api/tree/master'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/GoodforGod/java-etherscan-api/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'GoodforGod'
                        name = 'Anton Kurako'
                        email = 'goodforgod.dev@gmail.com'
                    }
                }
            }
        }
    }
}

